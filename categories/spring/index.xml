<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Spring on slow-wave blog</title>
    <link>http://slow-wave.github.io/categories/spring/</link>
    <description>Recent content in Spring on slow-wave blog</description>
    <image>
      <url>http://slow-wave.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://slow-wave.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Dec 2022 03:37:39 +0900</lastBuildDate><atom:link href="http://slow-wave.github.io/categories/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[토비의 스프링 3.1] 2장 정리</title>
      <link>http://slow-wave.github.io/post/spring/spring_toby_2/</link>
      <pubDate>Sun, 11 Dec 2022 03:37:39 +0900</pubDate>
      
      <guid>http://slow-wave.github.io/post/spring/spring_toby_2/</guid>
      <description>Intro 스프링의 핵심 = 객체지향 &amp;amp; 테스트 테스트 = 의도했던 대로 코드가 동작하는지를 확인해서, 만든 코드를 확신할 수 있게 해주는 작업임. 2.1 UserDaoTest 다시 보기 2.1.2 UserDaoTest의 특징 작은 단위의 테스트
테스트하고자 하는 대상이 명확하면 대상에만 집중해서 테스트하는 것이 바람직함. → 테스트는 작은 단위로 쪼개서 집중 (관심사의 분리)
→ 단위 테스트(unit test)
자동수행 테스트 코드
테스트는 자동으로 수행되도록 코드로 만들어지는 것이 중요함. (자주 반복할 수 있다는 장점이 있음.) 2.1.3 UserDaoTest의 문제점 수동 확인 작업의 번거로움 테스트의 수행은 코드에의해 자동으로 진행되지만 확인하는 일은 사람의 책임.</description>
    </item>
    
    <item>
      <title>[토비의 스프링 3.1] 1.5~1.9 정리</title>
      <link>http://slow-wave.github.io/post/spring/spring_toby_1/</link>
      <pubDate>Sat, 03 Dec 2022 21:57:55 +0900</pubDate>
      
      <guid>http://slow-wave.github.io/post/spring/spring_toby_1/</guid>
      <description>1.5 스프링의 IoC 스프링의 핵심 → 애플리케이션 컨텍스트(빈 팩토리) 1.5.1 오브젝트 팩토리를 이용한 스프링 IoC 어플리케이션 컨텍스트와 설정정보
빈(bean) : 스프링이 제어권을 가지고 직접 만들고 관계를 부여하는 오브젝트 스프링 빈은 스프링 컨테이너가 생성과 관계설정, 사용 등을 제어해주는 제어의 역전이 적용된 오브젝트를 가리키는 말 빈 팩토리(bean factory) : 빈의 생성과 관계 설정과 같은 제어를 담당하는 IoC 오브젝트 애플리케이션 컨텍스트 : 별도의 정보를 참고해서 빈의 생성, 관계설정 등의 제어 작업 총괄. IoC엔진이라는 의미가 부각됨.</description>
    </item>
    
    <item>
      <title>[토비의 스프링 3.1] 1.1~1.4 정리</title>
      <link>http://slow-wave.github.io/post/spring/spring_toby_0/</link>
      <pubDate>Sat, 26 Nov 2022 00:08:02 +0900</pubDate>
      
      <guid>http://slow-wave.github.io/post/spring/spring_toby_0/</guid>
      <description>스프링이란 무엇인가? 스프링은 자바 엔터프라이즈 애플리케이션 개발에 사용되는 애플리케이션 프레임워크다. 스프링을 사용한다는 것은 다음의 세 가지 요소를 적극적으로 활용해서 애플리케이션을 개발한다는 뜻이다. 스프링 개발 철학 중 하나는 ‘항상 프레임워크 기반의 접근 방법을 사용하라’이다. 프레임워크의 가장 중요한 목적은 개발자가 일정한 틀을 따라 효과적으로 애플리케이션을 개발하도록 돕는 것이다. 따라서 프레임워크를 잘 이해하려면 프레임워크를 사용했을 때 애플리케이션 코드가 어떻게 만들어지는지 자세히 살펴봐야 한다. 1) 애플리케이션의 기본 틀 - 스프링 컨테이너 스프링은 스프링 컨테이너라고 불리는 스프링 런타임 엔진을 제공한다.</description>
    </item>
    
  </channel>
</rss>
